---
language: ruby
stages:
  - name: tests
  - name: mkrelease
    if: |
      branch = master \
      AND type != pull_request
jobs:
  include:
    - &linux_tests
      stage: tests
      rvm: "2.5"
      os: linux
      dist: xenial
      addons:
        apt:
          sources:
            - sourceline: "ppa:kimura-o/ppa-tmux"
          packages:
            - tmux
            - python3
      install:
        - git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
        - ~/.fzf/install --no-key-bindings --no-completion --update-rc
        - source ~/.bashrc
        - gem install bundler -v $(cat test/Gemfile.lock | grep -A 1 "BUNDLED WITH" | tail -n1 | sed "s/ //g")
      script:
        - make deps
        - make test

    - <<: *linux_tests
      os: osx
      addons:
        homebrew:
          packages:
            - bash
            - bash-completion@2
            - python3
            - tmux
            - docker
            - coreutils
            - findutils
            - gawk
            - gnu-sed
      before_install:
        - sudo bash < <(echo '$(brew --prefix)/bin/bash' >> /etc/shells)
        - sudo bash < <(echo 'export PATH="$(brew --prefix coreutils)/libexec/gnubin:$PATH"' >> ~/.bashrc)
        - sudo bash < <(echo 'export PATH="$(brew --prefix findutils)/libexec/gnubin:$PATH"' >> ~/.bashrc)
        - sudo bash < <(echo 'export PATH="$(brew --prefix gnu-sed)/libexec/gnubin:$PATH"' >> ~/.bashrc)
        - sudo bash -c 'echo -ne ". $(brew --prefix)/share/bash-completion/bash_completion" > /etc/bash_completion'
        - sudo chsh -s $(brew --prefix)/bin/bash "$USER"
        - cat ~/.bashrc

    - stage: mkrelease
      install:
        - wget --quiet -O /tmp/mkrelease.sh https://raw.githubusercontent.com/rockandska/scripts/${MKRELEASE_REF:-master}/CI/mkrelease.sh
        - chmod +x /tmp/mkrelease.sh
        - wget --quiet -O /tmp/pubrelease.sh https://raw.githubusercontent.com/rockandska/scripts/${PUBRELEASE_REF:-master}/CI/pubrelease.sh
        - chmod +x /tmp/pubrelease.sh
      script:
        - TRAVIS_TAG=$(/tmp/mkrelease.sh || travis_terminate 1)
        - export TRAVIS_TAG
      deploy:
        provider: script
        script: /tmp/pubrelease.sh
        skip_cleanup: true
        on:
          tags: true
