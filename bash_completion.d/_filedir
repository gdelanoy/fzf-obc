__fzf_obc_trap_filedir()
{
  local status=$1
  shift
  # In compat mode, only had / to directories
  local i
  for i in ${!COMPREPLY[@]};do
    if test -d "${COMPREPLY[$i]}";then
      COMPREPLY[$i]=${COMPREPLY[$i]}/
    fi
  done
  if [[ "${cur}" == *"/**" ]];then
    # Replace COMPREPLY with our own results
    # Add recursivity to native _filedir
    local IFS=$'\n'
    cur=${cur/\*\*/}
    fzf_defaults_opts='-m --bind tab:toggle+down'

    _tilde "$cur" || return

    local oldcur=${cur}
    __expand_tilde_by_ref cur

    local startdir
    if [[ -n "${cur}" ]] && [[ ! "${cur}" =~ (\.|/)$ ]];then
      startdir="${cur}*"
    else
      startdir="${cur}"
    fi

    # Populate directories
    local dir
    while read dir;do
      [ ! -z "${dir}" ] && COMPREPLY+=( "${dir/${cur}/${oldcur}}" )
    done <<<$(_fzf_obc_dirs "${startdir}")

    # Files asked (with eventually an extension filter)
    if [[ "$1" != -d ]]; then
      local path
      if [[ -n "$1" ]];then
        #  Munge xspec to contain uppercase version too
        # http://thread.gmane.org/gmane.comp.shells.bash.bugs/15294/focus=15306
        local xspec=${1:+"*.@($1|${1^^})"}
        while read -r path;do
          [ ! -z "${path}" ] && COMPREPLY+=( "${path/${cur}/${oldcur}}" )
        done <<<$(
          _fzf_obc_files "${startdir}" \
          | (shopt -s extglob; while read -r line; do if [[ "${line}" == ${xspec} ]];then echo "${line}"; fi;done) \
        )
      else
        while read -r path;do
          [ ! -z "${path}" ] && COMPREPLY+=( "${path/${cur}/${oldcur}}" )
        done <<<$(_fzf_obc_files "${startdir}")
      fi
    fi
    cur="${cur}**"
  fi
}
__fzf_obc_add_trap _filedir
